<%= render :partial => "/admin/assets/sidebar", :locals => { :site => @site } %>
<script type="text/javascript" charset="utf-8">
  function extjs_sidebar_items () {
    return sidebar_drag_view();
  }
  
  function modify_main_menu(menu) {
    return [];
  }
  
  function extjs_body_items () {
    return [{
      region: "center",
      bodyStyle: "background-color: white",
      layout: "border",
      items: {
        xtype: 'treepanel',
        region: "center",
        autoScroll: true,
        border: false,
        dataUrl: '<%= url_for :site_id => @site.id, :action => 'expand_node' %>',
        enableDD: true,
        root: new Ext.tree.AsyncTreeNode({
          expanded: true,
          children: <%= @sections.collect{|s| s if s.parent_id.nil?}.compact.collect{|s| {:text => s.title, :url => admin_section_contents_path(s), :id => s.id, :leaf => false}}.to_json %>
        }),
        rootVisible: false,
        listeners: {
          dblclick: function(n) {
            generic_loader.show();
            window.location = n.attributes.url;
            return false;
          },
          movenode: function(tree, node, old_parent, new_parent, index) {
            left_id = node.previousSibling ? node.previousSibling.id : 1;
            params = "_method=put&sections["+node.id+"][parent_id]=" + (/\D/.test(new_parent.id) ? null : new_parent.id) + "&sections["+node.id+"][left_id]=" + left_id + "&locale=<%= params[:locale] %>&site_id=<%=@site.id%>&authenticity_token=" + encodeURIComponent(window._auth_token);
          
            $.post('<%= url_for :site_id => @site.id, :action => 'update_all' %>', params, function(data) {
            });
          }
        },
        tbar: [{
            text: t['new_text'],
            iconCls: 'silk-add',
            handler: function(btn, ev) {
                generic_loader.show();
                window.location = '<%= new_admin_section_path %>';
            },
            scope: this
        }]
        
      }
    }];
  }
</script>
<%
	table_for @sections, :collection_name => :sections, :class => 'sections list tree' do |t|
		t.column :section
		t.column :actions, :class => :actions

		t.row(:class => 'section') do |r, section|
			r.add_class "level_#{section.level}"
			r.cell content_status(section) + link_to(section.title, admin_section_contents_path(section), :class => section.state)
			r.cell link_to_edit(section) + "\n" +
			       link_to_delete(section)
		end

		t.empty :p, :class => 'empty' do
	    t(:'adva.sections.no_sections_in_site', :section => @section.title) + "\n" +
			link_to_new(:'adva.sections.links.create_now', [@site, :section])
		end
	end
%>
